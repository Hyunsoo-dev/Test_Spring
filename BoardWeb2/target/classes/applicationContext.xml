<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">

	<context:component-scan base-package="com.springbook.biz"/>
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- DataSource 설정 -->
	
	<!-- 
	<context:property-placeholder location="classpath:config/database.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:tcp://localhost/~/test" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean> -->
	<!-- <bean id="around" class="com.springbook.biz.common.AroundAdvice" />
	
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" />
		<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))" />
		<aop:aspect ref="around">
			<aop:around pointcut-ref="allPointcut" method="aroundLog" />
		</aop:aspect>
	</aop:config> -->
	
	<!-- <bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
		<property name="userDAO" ref="userDAO"></property>
	</bean>
	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean> -->
	<!-- <bean class="polymorphism.SonySpeaker"/> -->
<!-- 	<bean id="tv" class="polymorphism.SamsungTV" p:speaker-ref="apple" p:price="30000" init-method="initMethod" destroy-method="destroyMethod" lazy-init="true">
	</bean>
	
	<bean id="sony" class="polymorphism.SonySpeaker" lazy-init="true"/>
	<bean id="apple" class="polymorphism.AppleSpeaker" lazy-init="true"/> -->
	
	
	<!-- <bean id="collectionBean" class="com.springbook.ioc.injection.CollectionBean" lazy-init="true">
		<property name="addressList">
			<props>
				<prop key="고길동">서울시 강남구 역삼동</prop>
			</props>
		</property>
	</bean> -->
</beans>
